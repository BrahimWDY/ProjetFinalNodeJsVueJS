{"remainingRequest":"/Users/brahim/Documents/final-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brahim/Documents/final-project/src/Services/ProjectService.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brahim/Documents/final-project/src/Services/ProjectService.vue","mtime":1551607794513},{"path":"/Users/brahim/Documents/final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brahim/Documents/final-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/brahim/Documents/final-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brahim/Documents/final-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n// je récupère mon api\nconst myApiUrl = 'http://localhost:3000/api/v1/projet/'\n\nexport default {\n    // cette fonction nous permet de récupérer tout les projets de notre BDD\n    getProjects () {\n        return fetch(myApiUrl)\n            .then((response) => {\n                return response.json()\n            })\n    },\n    // cette fonction nous permet de créer et de mettre notre projet dans la BDD\n    createProject (NomProjet, ProjectDesc, DateDebut, DateFin, MontantTotal, Statut) {\n        return fetch(myApiUrl, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    \"NomProjet\":NomProjet,\n                    \"ProjectDesc\":ProjectDesc,\n                    \"DateDebut\": DateDebut,\n                    \"DateFin\": DateFin,\n                    \"MontantTotal\": MontantTotal,\n                    \"Statut\": Statut\n                }\n            )\n        })\n            .then((response) => {\n                console.log(response)\n                return response.json()\n            })\n    },\n    // cette fonction nous permet de supprimer un projet avec son id\n    deleteProduct (id) {\n\n        return fetch(myApiUrl + id, {\n            method: 'delete',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n            })\n            .then((response) => {\n                console.log(response)\n                return response.json()\n            })\n    },\n    // cette fonction nous permet de modifier notre projet\n    UpdateProject (id, NomProjet, ProjectDesc, DateDebut, DateFin, MontantTotal, Statut) {\n        return fetch(myApiUrl + id, {\n            method: 'put',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    \"NomProjet\": NomProjet,\n                    \"ProjectDesc\": ProjectDesc,\n                    \"DateDebut\": DateDebut,\n                    \"DateFin\": DateFin,\n                    \"MontantTotal\": MontantTotal,\n                    \"Statut\": Statut,\n                }\n            )\n        })\n            .then((response) => {\n                return response.json()\n            })\n    },\n    // cette fonction nous permet de recuperer 1 projet grace à son id\n    getProject (id) {\n        return fetch(myApiUrl + id)\n            .then((response) => {\n                return response.json()\n            })\n    }\n}\n",{"version":3,"sources":["ProjectService.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProjectService.vue","sourceRoot":"src/Services","sourcesContent":["<script>\n    // je récupère mon api\n    const myApiUrl = 'http://localhost:3000/api/v1/projet/'\n\n    export default {\n        // cette fonction nous permet de récupérer tout les projets de notre BDD\n        getProjects () {\n            return fetch(myApiUrl)\n                .then((response) => {\n                    return response.json()\n                })\n        },\n        // cette fonction nous permet de créer et de mettre notre projet dans la BDD\n        createProject (NomProjet, ProjectDesc, DateDebut, DateFin, MontantTotal, Statut) {\n            return fetch(myApiUrl, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(\n                    {\n                        \"NomProjet\":NomProjet,\n                        \"ProjectDesc\":ProjectDesc,\n                        \"DateDebut\": DateDebut,\n                        \"DateFin\": DateFin,\n                        \"MontantTotal\": MontantTotal,\n                        \"Statut\": Statut\n                    }\n                )\n            })\n                .then((response) => {\n                    console.log(response)\n                    return response.json()\n                })\n        },\n        // cette fonction nous permet de supprimer un projet avec son id\n        deleteProduct (id) {\n\n            return fetch(myApiUrl + id, {\n                method: 'delete',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n                })\n                .then((response) => {\n                    console.log(response)\n                    return response.json()\n                })\n        },\n        // cette fonction nous permet de modifier notre projet\n        UpdateProject (id, NomProjet, ProjectDesc, DateDebut, DateFin, MontantTotal, Statut) {\n            return fetch(myApiUrl + id, {\n                method: 'put',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(\n                    {\n                        \"NomProjet\": NomProjet,\n                        \"ProjectDesc\": ProjectDesc,\n                        \"DateDebut\": DateDebut,\n                        \"DateFin\": DateFin,\n                        \"MontantTotal\": MontantTotal,\n                        \"Statut\": Statut,\n                    }\n                )\n            })\n                .then((response) => {\n                    return response.json()\n                })\n        },\n        // cette fonction nous permet de recuperer 1 projet grace à son id\n        getProject (id) {\n            return fetch(myApiUrl + id)\n                .then((response) => {\n                    return response.json()\n                })\n        }\n    }\n</script>\n"]}]}